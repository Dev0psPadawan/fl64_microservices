image: ruby:2.4.2

stages:
  - build
  - test
  - review
  - stage
  - production

variables:
  DATABASE_URL: 'mongodb://mongo/user_posts'

before_script:
  - export homedir=$(pwd)
  - cd reddit
  - bundle install

build_job:
  stage: build
  script:
    - echo 'Building'

test_unit_job:
  stage: test
  services:
    - mongo:latest
  script:
    - ruby simpletest.rb

test_integration_job:
  stage: test
  script:
    - echo 'Testing 2'

deploy_dev_job:
  stage: review
  script:
    - echo 'Deploy'
  environment:
    name: dev
    url: http://dev.example.com

branch review:
  stage: review
  script:
    - cd $homedir
    - echo "Deploy to  ${CI_ENVIRONMENT_SLUG}"
    - openssl enc -aes-256-cbc -d -in secrets.tar.gz.enc -out secrets.tar.gz -k ${GCPPASS} -md sha1
    - tar -xvf secrets.tar.gz key.json
    - base=https://github.com/docker/machine/releases/download/v0.14.0 && curl -L $base/docker-machine-$(uname -s)-$(uname -m) >/tmp/docker-machine && install /tmp/docker-machine docker-machine
    - export GOOGLE_APPLICATION_CREDENTIALS=key.json
    - ./docker-machine create --driver google --google-project docker-201818 --google-machine-image https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/family/ubuntu-1604-lts --google-machine-type n1-standard-1 --google-disk-size "50" --google-tags docker-host --google-zone europe-west4-a "${CI_COMMIT_REF_NAME}-${CI_PIPELINE_ID}"
  environment:
    name: branch/$CI_COMMIT_REF_NAME
    url: http://$CI_ENVIRONMENT_SLUG.example.com
  only:
    - branches
  except:
    - master

kill review:
  stage: review
  script:
    - cd $homedir
    - openssl enc -aes-256-cbc -d -in secrets.tar.gz.enc -out secrets.tar.gz -k ${GCPPASS} -md sha1
    - tar -xvf secrets.tar.gz key.json
    - base=https://github.com/docker/machine/releases/download/v0.14.0 && curl -L $base/docker-machine-$(uname -s)-$(uname -m) >/tmp/docker-machine && install /tmp/docker-machine docker-machine
    - export GOOGLE_APPLICATION_CREDENTIALS=key.json
    - ./docker-machine rm "${CI_COMMIT_REF_NAME}-${CI_PIPELINE_ID}" -f
  when: manual
  environment:
    name: branch/$CI_COMMIT_REF_NAME

staging:
  stage: stage
  when: manual
  only:
    - /^\d+\.\d+.\d+/
  script:
    - echo 'Deploy'
  environment:
    name: stage
    url: http://beta.example.com

production:
  stage: production
  when: manual
  only:
    - /^\d+\.\d+.\d+/
  script:
    - echo 'Deploy'
  environment:
    name: production
    url: http://example.com